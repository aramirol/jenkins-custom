name: Docker Image CI

on:
  push:
    branches:
      - main
      - feature/*

jobs:

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      # Check out the repo
      - name: Check out the repo
        uses: actions/checkout@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: my-docker-hub-namespace/my-docker-hub-repository

      # Read Image tag
      - name: Read Image tag
        id: tag
        uses: juliangruber/read-file-action@v1
        with:
          path: ./.imagetag.cfg

      # Build and push Docker tagged image
      - name: Build and push Docker image - ${{ steps.tag.outputs.content }}
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: false
          tags: aramirol/jenkins-custom:${{ steps.tag.outputs.content }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: aramirol/jenkins-custom:${{ steps.tag.outputs.content }}
          args: --file=Dockerfile
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

      # Build and push Docker latest image
      - name: Build and push Docker image - latest
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: false
          tags: aramirol/jenkins-custom:latest
          labels: ${{ steps.meta.outputs.labels }}
